events {}

http {
  include       mime.types;
  default_type  application/octet-stream;

  # TLS settings
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;

  # Default wildcard cert
  ssl_certificate     /etc/nginx/certs/sub.domain.local.crt;
  ssl_certificate_key /etc/nginx/certs/sub.domain.local.key;

  # map $http_upgrade $connection_upgrade_keepalive {
  #   default upgrade;
  #   ''      '';
  # }

  ########################################################
  # caddy test
  # server {
  #   listen 443 ssl;
  #   server_name caddy.sub.domain.local;
  #
  #   root /usr/share/caddy;
  #   index index.php index.html;
  #
  #   location / {
  #     try_files $uri $uri/ /index.php?$query_string;
  #   }
  #
  #   location ~ \.php$ {
  #     fastcgi_pass 127.0.0.1:9000;  # atau sesuaikan
  #     fastcgi_index index.php;
  #     include fastcgi_params;
  #     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  #   }
  #
  #   location ~ /\.ht {
  #     deny all;
  #   }
  # }

  ########################################################
  # apps test
  # server {
  #   listen 443 ssl;
  #   server_name apps.sub.domain.local;
  #
  #   location / {
  #     proxy_pass http://host.docker.internal:8088;
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $remote_addr;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #
  #     add_header Access-Control-Allow-Credentials "true" always;
  #     add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
  #     add_header Access-Control-Allow-Headers "Authorization, Accept, Content-Type, Origin, Cookie" always;
  #     add_header Content-Security-Policy "upgrade-insecure-requests" always;
  #   }
  # }

  ########################################################
  # app-ws test
  # server {
  #   listen 443 ssl;
  #   server_name ws.sub.domain.local;
  #
  #   location / {
  #     proxy_pass http://host.docker.internal:8080;
  #     proxy_http_version 1.1;
  #     proxy_set_header Upgrade $http_upgrade;
  #     proxy_set_header Connection "upgrade";
  #     proxy_set_header Host $host;
  #   }
  # }

  ########################################################
  # app2 test
  # server {
  #   listen 443 ssl;
  #   server_name app2.sub.domain.local;
  #
  #   location / {
  #     proxy_pass http://host.docker.internal:8000;
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $remote_addr;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #
  #     add_header Access-Control-Allow-Credentials "true" always;
  #     add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
  #     add_header Access-Control-Allow-Headers "Authorization, Accept, Content-Type, Origin, Cookie" always;
  #     add_header Content-Security-Policy "upgrade-insecure-requests" always;
  #   }
  # }

  ########################################################
  # influxdb iot
  # server {
  #   listen 443 ssl;
  #   server_name influx-iot.sub.domain.local;
  #
  #   ssl_protocols TLSv1.2 TLSv1.3;
  #   ssl_client_certificate /etc/nginx/certs/mtls/ca-chain.pem;
  #   ssl_verify_client on;
  #
  #   location / {
  #     proxy_pass http://host.docker.internal:8086;
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $remote_addr;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #
  #     add_header Access-Control-Allow-Credentials "true" always;
  #     add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
  #     add_header Access-Control-Allow-Headers "Authorization, Accept, Content-Type, Origin, Cookie" always;
  #     add_header Content-Security-Policy "upgrade-insecure-requests" always;
  #   }
  # }

  ########################################################
  # xampp-test
  server {
    listen 443 ssl;
    server_name xampp.sub.domain.local;

    # Proxy XAMPP
    location / {
        proxy_pass http://host.docker.internal:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Accept, Content-Type, Origin, Cookie" always;
        # add_header Content-Security-Policy "upgrade-insecure-requests" always;

        # Laravel/CI rewrite
        # try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ /\.ht {
        deny all;
    }
  }

  ########################################################
  # authentik
  server {
    listen 443 ssl;
    server_name authentik.sub.domain.local;

    location / {
      proxy_pass http://host.docker.internal:9000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;

      add_header Content-Security-Policy "frame-ancestors https://*.sub.domain.local" always;

      add_header Access-Control-Allow-Credentials "true" always;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
      add_header Access-Control-Allow-Headers "Authorization, Accept, Content-Type, Origin, Cookie" always;
      add_header Content-Security-Policy "upgrade-insecure-requests" always;
    }
  }

  ########################################################
  # test-app-authentik 
  server {
    listen 443 ssl;
    server_name test-app-authentik.sub.domain.local;

    location / {
        # JWT Auth via Authentik outpost
        auth_request /outpost.goauthentik.io/auth/nginx;
        error_page 401 = @auth_redirect;

        # Pass headers to test-app Lua
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-Auth-Token $http_authorization;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        proxy_pass http://test-app:8042;
    }

    location @auth_redirect {
        return 302 /outpost.goauthentik.io/start?rd=$scheme://$host$request_uri;
    }

    location /outpost.goauthentik.io {
        proxy_pass http://authentik-hq-server:9000/outpost.goauthentik.io;
        proxy_set_header Host $host;
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
    }
  }

  ########################################################
  # HTTP to HTTPS redirect
  server {
    listen 80;
    server_name *.sub.domain.local;

    return 301 https://$host$request_uri;
  }
}
